{"version":3,"sources":["src/pageLayout.js","src/count.js","App.js","reportWebVitals.js","index.js"],"names":["PageLayout","props","state","uniteData","selectedPokemon","_selectPokemon","bind","_generatePokemonNameDisplay","fetch","then","resp","json","setState","pokeID","newSelPokemon","this","pokeIDIdx","indexOf","splice","push","pokemonDisplay","forEach","value","activePoke","className","onClick","pokemonData","filter","datum","itemWeights","itemPokemonMapping","pokemonName","name","weightFactor","builds","length","buildDatum","held_items","heldItem","undefined","itemWeightArray","Object","keys","itemName","sort","a","b","output","console","log","key","itemWeight","pokemonList","weightItemUsage","_generateItemPrioritizationTable","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.191dde9f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { weightItemUsage } from \"./count\";\nimport '../css/pageLayout.css';\n\n\nclass PageLayout extends Component {\n    constructor(props) {\n        super(props);\n\n        // Get everything set up\n        this.state = {\n            uniteData: [],\n            selectedPokemon: []\n        }\n\n        // Bind Functions\n        this._selectPokemon = this._selectPokemon.bind(this);\n        this._generatePokemonNameDisplay = this._generatePokemonNameDisplay.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"https://unite-db.com/pokemon.json\").then(resp => {\n            return resp.json();\n        }).then((uniteData) => {\n            this.setState({\n                uniteData: uniteData\n            })\n        })\n    }\n\n    _selectPokemon(pokeID) {\n        const newSelPokemon = this.state.selectedPokemon;\n        const pokeIDIdx = this.state.selectedPokemon.indexOf(pokeID);\n        if (pokeIDIdx !== -1) {\n            newSelPokemon.splice(pokeIDIdx, 1)\n        } else {\n            newSelPokemon.push(pokeID);\n        }\n        this.setState({\n            selectedPokemon: newSelPokemon\n        })\n    }\n\n    _generatePokemonNameDisplay() {\n        const pokemonDisplay = []\n        this.state.uniteData.forEach((value) => {\n            const pokeID = value[\"id\"]\n            const activePoke = (this.state.selectedPokemon.indexOf(pokeID) !== -1)\n            pokemonDisplay.push(\n                <div className={\"pokemon-icon \" + (activePoke ? \"active\" : \"\")}\n                    onClick={() => this._selectPokemon(pokeID)}>{value[\"name\"]}</div>\n            )\n        })\n        return <div className=\"pokemon-display\">{pokemonDisplay}</div>\n    }\n\n    _generateItemPrioritizationTable() {\n        const pokemonData = this.state.uniteData.filter((datum) => {\n            // Only want to count items for pokemon who are chosen\n            return this.state.selectedPokemon.indexOf(datum[\"id\"]) === -1 ? false : true\n        })\n        weightItemUsage(pokemonData)\n\n        return <div>\n            {pokemonData.length}\n        </div>\n    }\n\n    render() {\n        return <div className=\"page-layout\">\n            <h1>Choose your Pokemon!</h1>\n            {this._generatePokemonNameDisplay()}\n\n            <h1>Suggested Item Prioritization</h1>\n            {this._generateItemPrioritizationTable()}\n        </div>\n    }\n}\n\nexport default PageLayout;","export function weightItemUsage(pokemonData) {\n    // pokemonData is an sub-array of the pokemon-DB one with only chosen Pokemon\n    const itemWeights = {}\n    const itemPokemonMapping = {}\n    pokemonData.forEach(datum => {\n        // Weight inversely by number of sets a pokemon has\n        // if lots of viable items then each has low weight\n        const pokemonName = datum.name\n        const weightFactor = 1 / datum.builds.length;\n        datum.builds.forEach(buildDatum => {\n            buildDatum.held_items.forEach(heldItem => {\n                // set the weights\n                if (itemWeights[heldItem] === undefined) {\n                    itemWeights[heldItem] = 0\n                }\n                itemWeights[heldItem] += weightFactor\n\n                // add the pokemon\n                if (itemPokemonMapping[heldItem] === undefined) {\n                    itemPokemonMapping[heldItem] = []\n                }\n                if (itemPokemonMapping[heldItem].indexOf(pokemonName) === -1) {\n                    itemPokemonMapping[heldItem].push(pokemonName)\n                }\n            }) \n        })\n    })\n\n    // Sort the item weight by the number of sets that have it\n    const itemWeightArray = []\n    Object.keys(itemWeights).forEach(itemName => {\n        itemWeightArray.push([itemName, itemWeights[itemName]]);\n    })\n    itemWeightArray.sort(function (a, b) {return b[1] - a[1]; })\n\n    // Sort the pokemon names in the item-pokemon mapping\n    Object.keys(itemPokemonMapping).forEach(itemName => {\n        itemPokemonMapping[itemName].sort()\n    })\n\n    const output = []\n    // Final data construction; list of objects\n    itemWeightArray.forEach(datum => {\n        console.log(datum)\n        const itemName = datum[0]\n        output.push({\n            key: itemName,\n            itemWeight: datum[1],\n            pokemonList: itemPokemonMapping[itemName]\n        })\n    })\n\n    console.log(output)\n    return output\n}","import PageLayout from './src/pageLayout';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <PageLayout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}